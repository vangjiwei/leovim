[
  // focusGroup
  {
    "key": "shift+alt+right",
    "command": "workbench.action.focusRightGroupWithoutWrap"
  },
  {
    "key": "shift+alt+left",
    "command": "workbench.action.focusLeftGroupWithoutWrap"
  },
  {
    "key": "shift+alt+up",
    "command": "workbench.action.focusAboveGroupWithoutWrap"
  },
  {
    "key": "shift+alt+down",
    "command": "workbench.action.focusBelowGroupWithoutWrap"
  },
  // jupyter
  {
    "key": "ctrl+shift+j",
    "command": "jupyter.openVariableView"
  },
  // goto error
  {
    "key": "alt+[",
      "command": "editor.action.marker.prevInFiles",
      "when": "editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+]",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorTextFocus && !isInEmbeddedEditor"
  },
  // outline focus, NOTE c-s-o still work
  {
    "key": "ctrl+shift+t",
    "command": "outline.focus"
  },
  // timeline
  {
    "key": "ctrl+shift+g",
    "command": "timeline.focus"
  },
  // ctrl n
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+n",
    "command": "welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+alt+meta+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+alt+r",
    "command": "code-runner.run"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  // debug toggle reple
  {
    "key": "ctrl+shift+r",
    "command": "workbench.debug.action.toggleRepl"
  },
  // ctrl o
  {
    "key": "ctrl+alt+o",
    "command": "workbench.action.files.openFile"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile"
  },
  {
    "key": "ctrl+shift+alt+o",
    "command": "workbench.action.files.openFolder"
  },
  // quit
  {
    "key": "alt+q",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "shift+alt+q",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeAllGroups"
  },
  {
    "key": "shift+alt+w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  // definition
  {
    "key": "ctrl+]",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+;",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+;",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  // typeDefinition
  {
    "key": "alt+,",
    "command": "editor.action.goToTypeDefinition",
    "when": "editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+,",
    "command": "editor.action.peekTypeDefinition",
    "when": "editorTextFocus && !isInEmbeddedEditor"
  },
  // declaration
  {
    "key": "alt+.",
    "command": "editor.action.goToDeclaration",
    "when": "editorTextFocus && !isInEmbeddedEditor",
  },
  {
    "key": "shift+alt+.",
    "command": "editor.action.peekDeclaration",
    "when": "editorTextFocus && !isInEmbeddedEditor",
  },
  // implementation
  {
    "key": "shift+alt+/",
    "command": "editor.action.peekImplementation",
    "when": "editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+'",
    "command": "editor.action.goToImplementation",
    "when": "editorTextFocus && !isInEmbeddedEditor"
  },
  // References
  {
    "key": "alt+/",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  // incoming outgoing calls
  {
    "key": "alt+'",
    "command": "references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  // insert mode up/down
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // sidebartoggle
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  // find
  {
    "key": "ctrl+f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  // contextMenu, like right mouse click
  {
    "key": "shift+alt+enter",
    "command": "editor.action.showContextMenu",
    "when": "editorTextFocus"
  },
  // terminal
  {
    "key": "alt+=",
    "command": "workbench.action.terminal.newWithProfile"
  },
  {
    "key": "alt+-",
    "command": "terminal.focus",
    "when": "!terminalfocus"
  },
  {
    "key": "shift+alt+[",
      "command": "workbench.action.terminal.focusPrevious"
  },
  {
    "key": "shift+alt+]",
    "command": "workbench.action.terminal.focusNext"
  },
  // panel
  {
    "key": "alt+\\",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "shift+alt+=",
    "command": "workbench.action.nextPanelView"
  },
  {
    "key": "shift+alt+-",
    "command": "workbench.action.previousPanelView"
  },
  // breakpoint
  {
    "key": "ctrl+shift+\\",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && editorTextFocus"
  },
  {
    "key": "ctrl+alt+\\",
    "command": "workbench.debug.viewlet.action.enableAllBreakpoints",
    "when": "debuggersAvailable && editorTextFocus"
  },
  {
    "key": "shift+alt+\\",
    "command": "workbench.debug.viewlet.action.disableAllBreakpoints",
    "when": "debuggersAvailable && editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+\\",
    "command": "workbench.debug.viewlet.action.removeAllBreakpoints",
    "when": "debuggersAvailable && editorTextFocus"
  },
  // debug
  {
    "key": "ctrl+h",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  // R ->
  {
    "key": "ctrl+shift+,",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'r'",
    "args": {
      "snippet": " <- "
    }
  },
  {
    "key": "ctrl+shift+.",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'r'",
    "args": {
      "snippet": " -> "
    }
  },
  {
    "key": "ctrl+shift+/",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'r'",
    "args": {
      "snippet": " %>% "
    }
  }
]

